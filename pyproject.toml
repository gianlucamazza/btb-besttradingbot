[tool.ruff]
line-length = 120
target-version = "py310"
extend-exclude = ["*.ipynb", ".venv"]

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "F",     # pyflakes
    "I",     # isort
    "W",     # pycodestyle warnings
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "N",     # pep8-naming
    "D",     # pydocstyle
    "UP",    # pyupgrade
    "S",     # flake8-bandit (security)
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C90",   # mccabe complexity
    "PT",    # flake8-pytest-style
    "RET",   # flake8-return
    "SIM",   # flake8-simplify
]
ignore = [
    "E203",  # Whitespace before ':'
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D107",  # Missing docstring in __init__
    "D203",  # One blank line before class
    "D212",  # Multi-line docstring summary should start at the first line
    "D213",  # Multi-line docstring summary should start at the second line
]

# Allow autofix for all enabled rules (when `--fix`) is provided
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "D103", "D100", "E501"]
"**/__init__.py" = ["F401"]

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["btb"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.lint.flake8-bandit]
hardcoded-tmp-directory = ["tempfile.mktemp"]

[tool.black]
line-length = 120
target-version = ["py310"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
known_first_party = ["btb"]
skip_gitignore = true
skip_glob = ["*.pyi", "**/__pycache__/*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--verbose --cov=btb --cov-report=term --cov-report=xml:coverage.xml"

[tool.coverage.run]
source = ["btb"]
omit = ["*/__init__.py", "tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.bandit]
exclude_dirs = [".venv", "build", "dist", "__pycache__", "htmlcov", "notebooks", "tests"]
skips = ["B311"]
exclude_tests = ["B101"] 